services:
  nginx-proxy:
    image: nginx:stable-alpine3.21-perl
    container_name: nginx-proxy
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx-proxy/conf.d:/etc/nginx/conf.d
      - ./nginx-proxy/certs:/etc/nginx/certs
    networks:
      - localnet

  laravel-backend:
    build:
      context: ./laravel-backend
      dockerfile: Dockerfile
    container_name: laravel-backend
    restart: unless-stopped
    working_dir: /var/www/html
    environment:
      UID: ${UID:-1000}
      GID: ${GID:-1000}
    volumes:
      - ./laravel-backend:/var/www/html
    networks:
      - localnet
    depends_on:
      - mysql
      - redis

  php:
    image: php:8.3-fpm
    container_name: laravel-php
    restart: unless-stopped
    environment:
      UID: ${UID:-1000}
      GID: ${GID:-1000}
    volumes:
      - ./laravel-backend:/var/www/html
    networks:
      - localnet
    depends_on:
      - mysql
      - redis

  nginx:
    image: nginx:stable-alpine
    container_name: laravel-nginx
    restart: unless-stopped
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./laravel-backend:/var/www/html
    networks:
      - localnet
    ports:
      - "8080:80"
    depends_on:
      - php

  react-frontend:
    build:
      context: ./react-frontend
    image: node:lts
    container_name: react-frontend
    ports:
      - "3000:3000"
    volumes:
      - ./react-frontend:/app
      - ./react-frontend/node_modules:/app/node_modules
    environment:
      NODE_ENV: development
    networks:
      - localnet

  mysql:
    image: mysql:latest
    container_name: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: testdb
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    ports:
      - "3306:3306"
    volumes:
      - ./mysql_data:/var/lib/mysql
    networks:
      - localnet

  redis:
    image: redis:latest
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    networks:
      - localnet

  minio:
    image: minio/minio:latest
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
    volumes:
      - ./minio_data:/data
    command: server /data --console-address ":9001"
    networks:
      - localnet

networks:
  localnet:
    driver: bridge
